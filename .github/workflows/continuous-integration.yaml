name: Test and Deploy

on:
  pull_request:
  push:
    branches: [master]

env:
  OMEGAUPUSER: CodingRush
  OMEGAUPPASS: ${{ secrets.OMEGAUP_PASSWORD }}

jobs:
  build-test-deploy:
    runs-on: ubuntu-latest
    steps:
    - name: Set base commit (pull request)
      run: |
        echo "::set-env name=GITHUB_BASE_COMMIT::${{ github.event.pull_request.base.sha }}"
        echo "::set-env name=GITHUB_CURRENT_COMMIT::${{ github.event.pull_request.head.sha }}"
      if: github.ref != 'refs/heads/master'

    - name: Set base commit (master)
      run: |
        echo "::set-env name=GITHUB_BASE_COMMIT::${{ github.event.before }}"
        echo "::set-env name=GITHUB_CURRENT_COMMIT::${{ github.event.after }}"
      if: github.ref == 'refs/heads/master'

    - name: Set up environment
      run: |
        git config --global core.quotePath false
        echo "::set-env name=PIPENV_PIPFILE::$(pwd)/utils/Pipfile"
    - name: Set up Python
      uses: actions/setup-python@v1
      with:
        python-version: '3.8'

    - uses: actions/checkout@v2
      with:
        ref: ${{ github.event.pull_request.head.sha }}
        fetch-depth: 0
        submodules: true

    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        (cd utils && sudo pip install pipenv && pipenv install)
    - name: Set up the CI flags.
      run: |
        # When the utils/ directory is changed, run all tests to avoid
        # regressions. Exit status of 0 means "unmodified".
        if git diff-tree --quiet ${{ env.GITHUB_BASE_COMMIT }} ${{ env.GITHUB_CURRENT_COMMIT }} -- utils/; then
          echo "::set-env name=CI_FLAGS::--ci"
        else
          echo "::set-env name=CI_FLAGS::--ci --all"
        fi
    - name: Download omegaUp-ci container
      run: |
        docker login https://docker.pkg.github.com -u ${{ github.actor }} -p ${{ github.token }}
        python3 ./utils/runtests.py ${{ env.CI_FLAGS }} --only-pull-image
    - name: Run tests
      run: python3 ./utils/runtests.py ${{ env.CI_FLAGS }}

    - name: Generate pngs/testplan
      run: python3 ./utils/generateresources.py --generate=png,testplan ${{ env.CI_FLAGS }}
      if: github.ref == 'refs/heads/master'

    - name: Deploy to omegaUp
      run: pipenv run python3 ./utils/upload.py --ci --verbose  # Don't use CI_FLAGS to avoid deploying all problems.
      if: github.ref == 'refs/heads/master'

    #- name: Push to public branch
    #  run: cd utils && bash ./publish
    #  if: github.ref == 'refs/heads/master'

    - name: Zip logs
      if: ${{ always() }}
      run: |
        # actions/upload-artifacts action upload each and every log file
        # individually through one API call. This is extremely slow (~2
        # minutes) due to there being thousands of little files. Instead, .zip
        # them all by hand and let the upload action just upload the .zip. Yes,
        # this causes there to be a .zip within a .zip, but the billable
        # minutes savings are worth it.
        if [[ -d results/ && "$(find results/ -type f)" != "" ]]; then
          (cd results && zip -r ../results.zip .)
        fi
    - name: Upload logs
      if: ${{ always() }}
      uses: actions/upload-artifact@v2
      with:
        name: omegaUp-CI-logs
        path: results.zip